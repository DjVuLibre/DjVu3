SHELL=/bin/sh
prefix=@prefix@
bindir=@prefix@/bin
SRCDIR=@srcdir@
VPATH=@srcdir@
CXX=@cxx@
OPT=@opt@
WARN=@warn@
RANLIB=@ranlib@
AR=@ar@
DOCXX= doc++
LDLIBS=@ldlibs@
DEFS=@defs@
CXXFLAGS= $(DEFS) $(OPT) $(WARN) -I$(SRCDIR) -DUNIX
LDFLAGS=


# Release info

NAM= libdjvu++
VER= 1.2

# This 
LIB= libdjvu++.a
PROG= djvuinfo c44 d44 djvutopnm djvumake djvuextract ppmcoco bzz

# Makefile for libdjvu++.a

LIBOBJS= GString.o GException.o GContainer.o GRect.o GSmartPointer.o \
	 GThreads.o ByteStream.o ZPCodec.o GBitmap.o GPixmap.o \
	 IFFByteStream.o BSByteStream.o JB2Image.o GScaler.o IWImage.o \
	 DjVuImage.o GOS.o DjVuGlobal.o ATTLicense.o

# Make all

all: $(LIB) $(PROG) 
	echo Done.

# Rule for building the library

$(LIB): $(LIBOBJS) 
	if [ -r $(LIB) ] ; then rm $(LIB) ; fi
	$(AR) cq $(LIB) $(LIBOBJS)
	$(RANLIB) $(LIB)

# Rules for building support programs

C44OBJS = c44.o
D44OBJS = d44.o
DJVUINFOOBJS = djvuinfo.o
DEJAVUTOPNMOBJS = djvutopnm.o
MAKEDEJAVUOBJS = djvumake.o
BREAKDEJAVUOBJS = djvuextract.o
PPMCOCOOBJS = ppmcoco.o
ANNOTATEOBJS = annotate.o
BZZOBJS = bzz.o BSByteStream.o ZPCodec.o ByteStream.o GException.o DjVuGlobal.o
LIBDJVUOBJS = libdjvu.o 

c44: $(C44OBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(C44OBJS) $(LIB) $(LDLIBS)

d44: $(D44OBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(D44OBJS) $(LIB) $(LDLIBS)

djvuinfo: $(DJVUINFOOBJS) $(LIB) 
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUINFOOBJS) $(LIB) $(LDLIBS)

djvutopnm: $(DEJAVUTOPNMOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DEJAVUTOPNMOBJS) $(LIB) $(LDLIBS)

djvumake: $(MAKEDEJAVUOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(MAKEDEJAVUOBJS) $(LIB) $(LDLIBS)

djvuextract: $(BREAKDEJAVUOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(BREAKDEJAVUOBJS) $(LIB) $(LDLIBS)

ppmcoco: $(PPMCOCOOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(PPMCOCOOBJS) $(LIB) $(LDLIBS)

annotate: $(ANNOTATEOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(ANNOTATEOBJS) $(LIB) $(LDLIBS)

bzz: $(BZZOBJS) $(LIB)
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(BZZOBJS) $(LIB) $(LDLIBS)

# License substitution

ATTLicense.cpp: ATTLicense.cpp.in ATTLICENSE
	sed < $(SRCDIR)/ATTLICENSE > ATTLICENSE.tmp\
	   -e 's/\"/\\"/g' -e 's/.*/"&\\n"/'
	sed < $(SRCDIR)/ATTLicense.cpp.in > ATTLicense.cpp \
	   -e '/@ATTLICENSE@/r ATTLICENSE.tmp' -e '/@ATTLICENSE@/d'
	-rm ATTLICENSE.tmp

libdjvu++.dxx: libdjvu++.dxx.in
	sed < $(SRCDIR)/libdjvu++.dxx.in > libdjvu++.dxx \
	   -e '/@ATTLICENSE@/r $(SRCDIR)/ATTLICENSE' -e '/@ATTLICENSE@/d' 

# Documentation

html: libdjvu++.dxx libdjvu++.footer
	-rm -rf @Doc
	-mkdir @Doc 2>/dev/null
	${DOCXX} -d @Doc -B $(SRCDIR)/libdjvu++.footer libdjvu++.dxx

tex:  libdjvu++.dxx
	-@mkdir @Doc 2>/dev/null
	${DOCXX} -t -o @Doc/libdjvu++.tex -ep fullpage libdjvu++.dxx
	( cd @Doc ; latex libdjvu++.tex ; latex libdjvu++.tex )
	dvips @Doc/libdjvu++.dvi -o
	gzip -f libdjvu++.ps


# Generic rules

clean:
	-rm 2>/dev/null -rf $(PROG) ; true
	-rm 2>/dev/null *.o *.a *.out *.rpo ii_files ; true
	( cd @Tools ; $(MAKE) clean )
	( cd @Test ; $(MAKE) clean )
	-@echo Cleaned.

realclean:
	-rm 2>/dev/null -rf @Doc libdjvu++.dxx libdjvu++.ps.gz ; true
	-rm 2>/dev/null -rf ATTLicense.cpp Makefile.dep ; true
	-@$(MAKE) clean

distclean:
	-rm 2>/dev/null -rf $(PROG) ; true
	-rm 2>/dev/null *.o *.a *.out *.rpo ii_files Makefile ; true
	( cd @Tools ; $(MAKE) distclean )
	( cd @Test ; $(MAKE) distclean )
	-@echo Cleaned.

install: $(PROG)
	-@mkdir $(prefix) 2>/dev/null
	-@mkdir $(bindir) 2>/dev/null
	for n in $(PROG); do        \
	  cp $$n $(bindir)        ; \
	  chmod 755 $(bindir)/$$n ; \
	done
	-@echo Installed.

depend:
	( cd $(SRCDIR) ; echo "### DEPENDENCIES" ;\
	  for n in *.cpp ; do ${CXX} -MM $(CXXFLAGS) $$n ; done ) > Makefile.dep
	sed -e '/^### DEPENDENCIES$$/,$$d' Makefile > Makefile.new
	cat Makefile.dep >> Makefile.new
	mv Makefile.new Makefile
	  
release:
	$(MAKE) realclean
	$(MAKE) depend
	$(MAKE) ATTLicense.cpp
	$(MAKE) libdjvu++.dxx
	$(MAKE) tex
	$(MAKE) html
	$(MAKE) distclean
	@(cd ..; gnu-tar cvf - --exclude=CVS $(NAM) ) | gzip -9 > ../$(NAM)-$(VER).tar.gz
	#@attcapsule ATTLICENSE ../$(NAM)-$(VER).tar.gz
	@echo Distribution is in ../$(NAM)-$(VER).tar.gz


PHONY: html tex clean realclean distclean install depend release


# Handle cpp files as C++
.SUFFIXES: .cpp
.cpp.o:
	$(CXX) $(CXXFLAGS) -c $(SRCDIR)/$*.cpp


