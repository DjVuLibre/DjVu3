# C- Copyright (c) 1999 AT&T Corp.  All rights reserved.
# C-
# C- This software may only be used by you under license from AT&T
# C- Corp. ("AT&T"). A copy of AT&T's Source Code Agreement is available at
# C- AT&T's Internet website having the URL <http://www.djvu.att.com/open>.
# C- If you received this software without first entering into a license with
# C- AT&T, you have an infringing copy of this software and cannot use it
# C- without violating AT&T's intellectual property rights.
# C-
# C- $Id: Makefile.in,v 1.102 2000-10-10 20:54:42 bcr Exp $

%%%include <paths>

SHELL=/bin/sh
prefix=@%prefix%@
bindir=@%PROJECT_PREFIX%@/bin
libdir=@%PROJECT_PREFIX%@/lib
incdir=@%PROJECT_PREFIX%@/include
THREADS=@%threads%@
DEFS=@%DEFS%@ @%DEFSTHREADS%@
INCS=$(DJVUAPI_INC) @%INCS%@
LDFLAGS=
LIBS=@%LIBS%@ @%LIBSTHREADS%@ @%LIBJPEG%@ @%libmath%@
MAKESTLIB=@%make_stlib%@
LIBJPEG=@%LIBJPEG%@

CXX=@%CXX%@
CXXOPT=@%CXXOPT%@ @%CXXUNROLL%@
CXXWARN=@%CXXWARN%@
CXXPIC=@%CXXPIC%@
CXXTHREADS=@%CXXTHREADS%@
CXXRPO=@%CXXRPO%@
CXXFLAGS=@%CXXFLAGS%@ $(CXXTHREADS) $(CXXRPO) $(CXXOPT) $(CXXWARN) $(CXXPIC) $(DEFS) $(INCS)

%%%include <commands>

LIB= $(LIBDJVUXX)

# Makefile for libdjvu++.a

LIBOBJS= DjVuGlobal.o DjVuGlobalMemory.o GOS.o GException.o GContainer.o \
         GString.o GThreads.o GRect.o GSmartPointer.o  MMX.o Arrays.o debug.o \
	 GBitmap.o GPixmap.o GScaler.o DjVuPalette.o \
	 ByteStream.o IFFByteStream.o BSByteStream.o ZPCodec.o \
	 JB2Image.o IWTransform.o IWImage.o MMRDecoder.o JPEGDecoder.o \
	 DataPool.o GURL.o DjVuFileCache.o DjVuPort.o GMapAreas.o \
	 DjVuAnno.o DjVuInfo.o DjVuFile.o DjVuImage.o DjVuDocument.o\
	 DjVmDir.o DjVmDoc.o DjVmDir0.o DjVuNavDir.o DjVuErrorList.o \
	 parseoptions.o DjVuDocEditor.o DjVuToPS.o DjVuDumpHelper.o \
	 DjVuMessage.o

# Make all

all: lib prog

lib: $(LIB)

prog:



# Rule for building the library

$(LIB): $(LIBOBJS) 
	if [ -r $(LIB) ] ; then rm $(LIB) ; fi
	if [ -n "$(RPO)" ] ; then $(RPO) $(LIBOBJS) ; fi
	$(MAKESTLIB) $(LIB) $(LIBOBJS)
	$(RANLIB) $(LIB)

# Documentation

html: libdjvu++.dxx libdjvu++.footer
	-$(MKDIRP) "$(HTMLREFLIBPATH)" 2>>/dev/null ; $(TRUE)
	-$(RM) -rf 2>>/dev/null `find "$(HTMLREFLIBPATH)" -name CVS -prune -o -type f -print` ; $(TRUE)
	${DOCXX} -d "$(HTMLREFLIBPATH)" -B SRCDIR/libdjvu++.footer SRCDIR/libdjvu++.dxx
	$(DOCXXCLEAN) "$(HTMLREFLIBPATH)"/*.html

tex: libdjvu++.ps.gz

libdjvu++.ps.gz: libdjvu++.dxx libdjvu++.footer
	$(RM) -f libdjvu++.ps.gz
	docxx=`which ${DOCXX} ; \
	if [ ! -x "$$docxx" ] ; then exit 0 ; fi ; \
	latex=`which latex` ; \
	if [ ! -x "$$latex" ] ; then exit 0 ; fi ; \
	dvips=`which dvips` ; \
	if [ ! -x "$$dvips" ] ; then exit 0 ; fi ; \
	gzip=`which gzip` ; \
	if [ ! -x "$$gzip" ] ; then exit 0 ; fi ; \
	$(MKDIRP) tex 2>>/dev/null ; \
	"$$docxx" -t -o tex/libdjvu++.tex -ep fullpage SRCDIR/libdjvu++.dxx ; \
	( cd tex ; \
	"$$latex" libdjvu++.tex ; \
	"$$latex" libdjvu++.tex ) ; \
	"$$dvips" tex/libdjvu++.dvi -o ; \
	exec "$$gzip" -f libdjvu++.ps.gz

update-html: html
	for i in html/* ; do ( \
	  if  [ -r "SRCDIR/$$i" ] then \
	    if ( cmp "$$i" "SRCDIR/$$i" ) ; then $(TRUE) ; else \
	      $(RM) -f "SRCDIR/$$i" ; \
	      $(CP) "$$i" "SRCDIR/$$i" ; \
	    fi ; \
	  else \
	    $(CP) "$$i" "SRCDIR/$$i" ; \
	  fi ) ; \
        done

# Cleaning

clean:
	-$(RM) 2>>/dev/null -rf $(PROG) ; true
	-$(RM) 2>>/dev/null $(LIB) *.o *.a *.out *.rpo *.dep ii_files ; true
	if [ -d Test ] ; then $(MAKE) -C Test clean ; fi

realclean: clean
	-$(RM) 2>>/dev/null -rf html tex libdjvu++.ps.gz ; true
	-$(RM) 2>>/dev/null -rf Makefile.depend++ ; true


# Installing

install: install-prog install-lib

install-prog: $(PROG)
	-@$(MKDIRP) $(bindir) 2>>/dev/null
	for n in $(PROG); do        \
	  $(CP) $$n $(bindir)        ; \
	  $(CHMOD) 755 $(bindir)/$$n ; \
	done

install-lib: $(LIB)
	-@$(MKDIRP) $(libdir) 2>>/dev/null
	for n in $(LIB); do        \
	  $(CP) $$n $(libdir)        ; \
	  $(CHMOD) 644 $(libdir)/$$n ; \
	  $(RANLIB) $(libdir)/$$n ; \
	done


# Dependencies

%%%include <depend>

# Misc

release:
	$(MAKE) realclean
	$(MAKE) depend
	$(MAKE) libdjvu++.dxx
	$(MAKE) tex
	$(MAKE) html
	$(MAKE) capsule

capsule:
	$(MAKE) distclean
	@attcapsule ATTLICENSE ../$(NAM)-$(VER).tar.gz
	@echo Distribution is in ../$(NAM)-$(VER).tar.gz


.PHONY: all lib prog \
       install install-lib install-prog \
       clean realclean html tex depend update-depend \
       release capsule

# Handle cpp files as C++

%%%include <compile>

%%%include "Makefile.depend++"

