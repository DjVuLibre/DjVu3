//C-  -*- C++ -*-
//C-
//C-  Copyright (c) 1998 AT&T	
//C-  All Rights Reserved 
//C-
//C-  THIS IS UNPUBLISHED PROPRIETARY SOURCE CODE OF AT&T
//C-  The copyright notice above does not evidence any
//C-  actual or intended publication of such source code.
//C-
//C-  $Id: DjVuGlobal.h,v 1.3 1999-02-01 18:32:31 leonb Exp $


#ifndef _DJVUGLOBAL_H
#define _DJVUGLOBAL_H

/** @name DjVuGlobal.h 

    This file is included by all include files in the DjVu reference
    library. It does nothing unless compilation symbols #DJVU_MEMORY# or
    #DJVU_NAMES# are defined.  These compilation options are useful when
    compiling the DjVu reference library as a shared library.

    {\bf Warning} --- This is not an include file for including everything in
    the DjVu library. It should not include other files unless this is
    absolutely necessary.
    @memo
    Global definitions.
    @version
    #$Id: DjVuGlobal.h,v 1.3 1999-02-01 18:32:31 leonb Exp $#
    @author
    Leon Bottou <leonb@research.att.com> -- initial (empty) file.  */
//@{

/** @name DjVu Memory.

    This section is enabled when compilation symbol #DJVU_MEMORY# is defined.
    It redefines the C++ memory allocation operators.  Some operating systems
    (e.g. Macintoshes) require very peculiar memory allocation in shared
    objects.  We redefine new and delete as #static inline# because we do not
    want to export the redefined versions to other libraries.

    {\bf Note} --- This is {\em unfinished}. Do not enable.  */
//@{
//@}

#ifdef DJVU_MEMORY
#include <stdlib.h> // for type size_t

static inline void *
operator new(size_t sz)
{
  return djvu_new(sz);
}

static inline void
operator delete(void *addr)
{
  return djvu_delete(addr);
}

static inline void *
operator new [] (size_t sz)
{
  return djvu_new(sz);
}

static inline void
operator delete [] (void *addr)
{
  return djvu_delete(addr);
}

#endif // DJVU_MEMORY


/** @name DjVu Names.  

    This section is enabled when compilation symbol #DJVU_NAMES# is defined.
    This section redefines class names in order to unclutter the name space of
    shared objects.  This is useful on systems which automatically export all
    global symbols when building a shared object.

    {\bf Note} --- This is {\em unfinished}. Do not enable.  */
//@{
//@}

#ifdef DJVU_NAMES

/* The following lines are generated by this shell command :
   --------------------
   egrep -h '^(class|struct) +[A-Z_][A-Za-z0-9_]*' *.h *.cpp |\
   sed -e 's:[a-z]*  *\([A-Za-z_][A-Za-z0-9_]*\).*:#define \1 DJVU_\1:g' |\
   sort
   -------------------- 
*/

#define BSByteStream DJVU_BSByteStream
#define BSort DJVU_BSort
#define ByteStream DJVU_ByteStream
#define Debug DJVU_Debug
#define DebugIndent DJVU_DebugIndent
#define DejaVuInfo DJVU_DejaVuInfo
#define DjVuAnno DJVU_DjVuAnno
#define DjVuImage DJVU_DjVuImage
#define DjVuInfo DJVU_DjVuInfo
#define DjVuNotifier DJVU_DjVuNotifier
#define ExampleClass DJVU_ExampleClass
#define GArray DJVU_GArray
#define GBitmap DJVU_GBitmap
#define GBitmapScaler DJVU_GBitmapScaler
#define GContainer DJVU_GContainer
#define GContainerBase DJVU_GContainerBase
#define GContainerBase DJVU_GContainerBase
#define GCriticalSection DJVU_GCriticalSection
#define GCriticalSectionLock DJVU_GCriticalSectionLock
#define GEvent DJVU_GEvent
#define GException DJVU_GException
#define GExceptionHandler DJVU_GExceptionHandler
#define GList DJVU_GList
#define GMap DJVU_GMap
#define GOS DJVU_GOS
#define GP DJVU_GP
#define GPBase DJVU_GPBase
#define GPEnabled DJVU_GPEnabled
#define GPixel DJVU_GPixel
#define GPixmap DJVU_GPixmap
#define GPixmapScaler DJVU_GPixmapScaler
#define GPool DJVU_GPool
#define GPosition DJVU_GPosition
#define GPosition DJVU_GPosition
#define GRect DJVU_GRect
#define GRectMapper DJVU_GRectMapper
#define GSArray DJVU_GSArray
#define GScaler DJVU_GScaler
#define GString DJVU_GString
#define GStringRep DJVU_GStringRep
#define GThread DJVU_GThread
#define IFFByteStream DJVU_IFFByteStream
#define IWBitmap DJVU_IWBitmap
#define IWEncoderParms DJVU_IWEncoderParms
#define IWPixmap DJVU_IWPixmap
#define JB2Blit DJVU_JB2Blit
#define JB2Codec DJVU_JB2Codec
#define JB2Image DJVU_JB2Image
#define JB2Shape DJVU_JB2Shape
#define MemoryByteStream DJVU_MemoryByteStream
#define PrimaryHeader DJVU_PrimaryHeader
#define PrimaryHeader DJVU_PrimaryHeader
#define PrimaryHeader DJVU_PrimaryHeader
#define SecondaryHeader DJVU_SecondaryHeader
#define SecondaryHeader DJVU_SecondaryHeader
#define SecondaryHeader DJVU_SecondaryHeader
#define SetNewHandler DJVU_SetNewHandler
#define SetNewHandler DJVU_SetNewHandler
#define StdioByteStream DJVU_StdioByteStream
#define TertiaryHeader1 DJVU_TertiaryHeader1
#define TertiaryHeader2 DJVU_TertiaryHeader2
#define TertiaryHeader3 DJVU_TertiaryHeader3
#define ZPCodec DJVU_ZPCodec
#define ZPCodecOops DJVU_ZPCodecOops
#define _IWAlloc DJVU__IWAlloc
#define _IWBlock DJVU__IWBlock
#define _IWBlock DJVU__IWBlock
#define _IWCodec DJVU__IWCodec
#define _IWCodec DJVU__IWCodec
#define _IWMap DJVU__IWMap
#define _IWMap DJVU__IWMap

#endif // DJVU_NAMES

//@}
#endif // _DJVUGLOBAL_H_
