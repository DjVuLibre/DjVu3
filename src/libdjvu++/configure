#!/bin/sh

# C- Copyright (c) 1999 AT&T Corp.  All rights reserved.
# C-
# C- This software may only be used by you under license from AT&T
# C- Corp. ("AT&T"). A copy of AT&T's Source Code Agreement is available at
# C- AT&T's Internet website having the URL <http://www.djvu.att.com/open>.
# C- If you received this software without first entering into a license with
# C- AT&T, you have an infringing copy of this software and cannot use it
# C- without violating AT&T's intellectual property rights.
# C-
# C- $Id: configure,v 1.25 1999-09-08 21:39:50 leonb Exp $


### ------------------------------------------------------------------------
### The substitutions

prefix=/usr/local
topsrcdir=.
CXX=${CXX-g++}
CC=${CC-gcc}
OPT=${OPT}
WARN=${WARN}
RANLIB=${RANLIB-ranlib}
MAKE_STLIB="ar cq"
LIBS=-lm
RPO=${RPO}
DEFS=


### ------------------------------------------------------------------------
### Echo without newline

if [ "`echo -n`" = "-n" ]
then
  echon() { 
    echo $* "\c" 
  }
else
  echon() { 
    echo -n $* 
  }
fi


### ------------------------------------------------------------------------
### Check top dir

conf=`basename $0`
topsrcdir=`dirname $0`
if [ ! -r "$topsrcdir/libdjvu++.dxx.in" -o ! -r $topsrcdir/ATTLICENSE ] 
then
   echo 1>&2 "$conf: Cannot recognize source directory."
   exit 1
fi


### ------------------------------------------------------------------------
### Process arguments

for arg 
do
   case $arg in 
        --prefix=* )     
           prefix=`echo $arg | sed 's/[-A-Za-z_]*=//'` 
           ;; 
        --with-debug )
           OPT='-g'
           DEFS="$DEFS -DDEBUG"
           ;;
        --with-threads=* )
           threads=`echo $arg | sed 's/[-A-Za-z_]*=//'` 
           ;; 
        --without-threads )
           threads=no 
           ;;
        --with-cxxflag=* )
           flag=`echo $arg | sed 's/[-A-Za-z_]*=//'`
           DEFS="$DEFS $flag"
           ;;
        --with-frepo )
           rpo=yes
           ;;
        *)
           test $arg = --help || echo 1>&2 "$conf: Unrecognized option '$arg'"
           cat 1>&2 <<EOF
Usage: $conf <options>
Recognized options:
  --prefix=PREFIXDIR                    set install directory.
  --with-debug                          compile with debug enabled.
  --with-cxxflag=FLAG                   pass specific flag to C++ compiler.
  --without-threads                     do not use threads.
  --with-threads=(cothreads|posix|dce)  choose a thread implementation.
  --with-frepo                          use -frepo option in G++.
EOF
           exit 1 ;;
   esac
   shift
done


### ------------------------------------------------------------------------
### License stuff (currently disabled)

if false
then
  accept=show
  while [ "$accept" != yes -a "$accept" != no ]
  do
    if [ "$accept" = show ] ; then
       ${PAGER-more} $topsrcdir/ATTLICENSE
    fi
    echo
    echon "Do you accept this license agreement (yes/no/show) ?"
    read accept
    if [ "$accept" = no ] ; then
       echo Bye
       exit 0
    fi
  done
  echo
fi

### ------------------------------------------------------------------------
### Check compiler

echo 'int main(void) {return 0;}' > /tmp/$$.cpp
trap "rm 2>/dev/null /tmp/$$ /tmp/$$.*" 0

echon Testing C++ compiler ...
if ( ( $CXX -c /tmp/$$.cpp -o /tmp/$$.o ) >/dev/null 2>&1 ) 
then
  echo $CXX.
elif ( ( g++ -c /tmp/$$.cpp -o /tmp/$$.o ) >/dev/null 2>&1 ) 
then
  CXX=g++
  echo $CXX.
elif ( ( CC -c /tmp/$$.cpp -o /tmp/$$.o ) >/dev/null 2>&1 ) 
then
  CXX=CC
  echo $CXX.
else
  echo
  echo 1>&2 "$conf: ---------------------------------------------------------------   "
  echo 1>&2 "$conf: ------ Use environment variable CXX to specify which C++ compiler "
  echo 1>&2 "$conf: ------ should be used.  Environment variable OPT and WARN may     "
  echo 1>&2 "$conf: ------ be used in order should be used.  Use environment variables"
  echo 1>&2 "$conf: ------ OPT and WARN to specify compiler options.                  "
  echo 1>&2 "$conf: ---------------------------------------------------------------   "
  echo 1>&2 "$conf: Cannot find C++ compiler."
  exit 1
fi


### ------------------------------------------------------------------------
### Check if compiler is gcc/g++

echon Checking whether C++ compiler is gcc ...
echo 'int main(void) { return __GNUG__;}' > /tmp/$$.cpp
if ( $CXX -O -c /tmp/$$.cpp -o /tmp/$$ >/dev/null 2>&1 ) 
then
  compiler_is_gcc=yes
  test -z "$OPT" && OPT="-O3 -funroll-loops"
  test -z "$WARN" && WARN="-Wall -Wno-unused"
  echo yes.
else
  echo no.
fi


### ------------------------------------------------------------------------
### Select optimization option (non gcc)

if [ -z "$OPT" ] 
then
  echon Testing optimization option ... 
  echo 'int main(void) {return 0;}' > /tmp/$$.cpp
  if ( $CXX -O -c /tmp/$$.cpp -o /tmp/$$ 1>/dev/null 2>&1 ) 
  then
     OPT=-O
     echo $OPT
  else
     echo broken.
  fi
fi


### ------------------------------------------------------------------------
### Select pipe option 

echon Testing pipe option ...
echo 'int main(void) {return 0;}' > /tmp/$$.cpp
if ( $CXX -pipe -c /tmp/$$.cpp -o /tmp/$$ >/dev/null 2>&1 ) 
then
  echo yes.
  CXX="$CXX -pipe"
else
  echo no.
fi


### ------------------------------------------------------------------------
### Process thread options

if [ -n "$threads" ] 
then
  case "$threads" in
    no* )
       DEFS="$DEFS -DTHREADMODEL=NOTHREADS" 
       ;;       
    jri* )
       DEFS="$DEFS -DTHREADMODEL=JRITHREADS" 
       ;;       
    co* )
       DEFS="$DEFS -DTHREADMODEL=COTHREADS" 
       if [ -z "$compiler_is_gcc" ] 
       then
          echo 1>&2 "$conf: Cothreads only work with gcc."
          exit 1
       fi
       echon "Testing exception handler patch for gcc ..."
       cat > /tmp/$$.cpp <<\EOF
extern "C" { extern void *(*__get_eh_context_ptr)(void), *__new_eh_context(void); }
void main() { __get_eh_context_ptr = &__new_eh_context; }
EOF
       if ( $CXX /tmp/$$.cpp -o /tmp/$$ 1>/dev/null 2>&1 ) 
       then
          echo yes.
       else
          echo no.
          echo 1>&2 "$conf: --------------------------------------------------------"
          echo 1>&2 "$conf: ------ Using COTHREADS without the patch is unsafe."
          echo 1>&2 "$conf: ------ See documentation and file $topsrcdir/@Tools/README."
          echo 1>&2 "$conf: --------------------------------------------------------"
          DEFS="$DEFS -DNO_LIBGCC_HOOKS"
       fi
       ;;       
    posix* | dce* )
       DEFS="$DEFS -DTHREADMODEL=POSIXTHREADS" 
       echo 'int main(void) {return 0;}' > /tmp/$$.cpp
       echon "Check option -pthread ..."
       if ( ( $CXX -pthread /tmp/$$.cpp -o /tmp/$$ >/tmp/$$.log 2>&1 ) \
            && [ -z "`grep -i unrecognized /tmp/$$.log`" ] )
       then
         echo yes.
         OPT="$OPT -pthread"
       else
         echo no.
         echon "Check option -threads ..."
         if ( ( $CXX -threads /tmp/$$.cpp -o /tmp/$$ >/tmp/$$.log 2>&1 ) \
              && [ -z "`grep -i unrecognized /tmp/$$.log`" ] )
         then
           echo yes.
           OPT="$OPT -threads"
         else
           echo no.
           LIBS="-lpthread $LIBS"
           DEFS="$DEFS -D_REENTRANT"
         fi
       fi
       ;;
    *)
       echo 1>&2 "$conf: unrecognized argument for option '--with-threads'."
  esac
fi


### ------------------------------------------------------------------------
### Process rpo option

if [ -n "$rpo" ]
then
  echon Test if compiler supports option '-frepo' ...
  if [ -z "$compiler_is_gcc" ] 
  then
     echo no.
     echo "$conf: Option '-frepo' only work with gcc."
     exit 1
  fi
  echo 'int main(void) {return 0;}' > /tmp/$$.cpp
  if ( ( $CXX -frepo /tmp/$$.cpp -o /tmp/$$ >/tmp/$$.log 2>&1 ) \
         && [ -z "`grep -i unrecognized /tmp/$$.log`" ] )
  then
    echo yes.
    OPT="$OPT -frepo"
  else
    echo no.
    echo 1>&2 "$conf: Compiler does not support option '-frepo'."
    exit 1
  fi
  echon Searching program RPO ...
  test -z "$RPO" && RPO=rpo
  if ( $RPO 1>/dev/null 2>&1 ) 
  then
    echo $RPO
  else
    echo not found.
    echo 1>&2 "$conf: ---------------------------------------------------------------"
    echo 1>&2 "$conf: ------ Program RPO is required for using option '-frepo'.      "
    echo 1>&2 "$conf: ------ You may first configure without option '--with-frepo'   "
    echo 1>&2 "$conf: ------ and compile program RPO from directory '@Tools'.        "
    echo 1>&2 "$conf: ------ The full path of program rpo (as well as rpo options).  "
    echo 1>&2 "$conf: ------ can be specifed by setting the RPO environment variable."
    echo 1>&2 "$conf: ---------------------------------------------------------------"
    echo "$conf: Cannot execute program '$RPO'."
    exit 1
  fi
fi

### ------------------------------------------------------------------------
### Check programs

echon Searching AR program ...
if ( $AR /tmp/$$.a /tmp/$$.o >/dev/null 2>&1 ) 
then
  echo $AR
elif ( ar cq /tmp/$$.a /tmp/$$.o >/dev/null 2>&1 ) 
then 
  AR="ar cq"
  echo $AR
else
  echo
  echo 1>&2 "$conf: Cannot find archiving program."
  echo 1>&2 "$conf: Please set environment variable AR."
  exit 1
fi

echon Searching RANLIB program ...
if ( $RANLIB /tmp/$$.a >/dev/null 2>&1 )
then
  echo $RANLIB
else
  RANLIB=:
  echo "none."
fi



### ------------------------------------------------------------------------
### Function to generate makefiles


pathclean()
{
    echo $1 | sed \
                -e 's://:/:g' \
                -e 's:/\./:/:g' \
                -e 's:\(.\)/\.$:\1:g'
}


generate_makefile()
{
  # compute xtopsrcdir
  xtopsrcdir=$topsrcdir
  case $xtopsrcdir in
      /*) # absolute path
        ;;
      *)  # relative path
        temp=$1
        while [ "$temp" != "." ] 
        do
          xtopsrcdir=../$xtopsrcdir
          temp=`dirname $temp`
        done
        ;;
  esac 

  #compute topbuilddir
  temp=$1
  xtopbuilddir=.
  while [ "$temp" != "." ] 
  do
    xtopbuilddir=../$xtopbuilddir
    temp=`dirname $temp`
  done

  # compute xsrcdir
  xsrcdir=$xtopsrcdir/$1

  # make nice pathnames
  xsrcdir=`pathclean $xsrcdir`
  xtopsrcdir=`pathclean $xtopsrcdir`
  xtopbuilddir=`pathclean $xtopbuilddir`

  # substitute
  sed < $topsrcdir/$1/Makefile.in > $1/Makefile \
    -e 's!@prefix@!'"$prefix"'!g' \
    -e 's!@topsrcdir@!'"$xtopsrcdir"'!g' \
    -e 's!@topbuilddir@!'"$xtopbuilddir"'!g' \
    -e 's!@srcdir@!'"$xsrcdir"'!g' \
    -e 's!@cc@!'"$CC"'!g' \
    -e 's!@cxx@!'"$CXX"'!g' \
    -e 's!@defs@!'"$DEFS"'!g' \
    -e 's!@opt@!'"$OPT"'!g' \
    -e 's!@warn@!'"$WARN"'!g' \
    -e 's!@libs@!'"$LIBS"'!g' \
    -e 's!@ranlib@!'"$RANLIB"'!g' \
    -e 's!@rpo@!'"$RPO"'!g' \
    -e 's!@docxx@!'"doc++"'!g' \
    -e 's!@make_stlib@!'"$MAKE_STLIB"'!g' \
    -e 's!@make_shlib@!'"$MAKE_SHLIB"'!g'

  # dependencies
  if [ -r $topsrcdir/$1/Makefile.depend ]
  then
    cat $topsrcdir/$1/Makefile.depend >> $1/Makefile
  fi
}


### ------------------------------------------------------------------------
### Generate makefiles

if [ ! -d @Test ] ; then mkdir @Test ; fi

generate_makefile .
generate_makefile @Test


### ------------------------------------------------------------------------
### Success

echo
echo Configuration is complete.
echo You can proceed with the compilation by typing:
                              echo "    make clean"
test -n "$compiler_is_gcc" && echo "    make depend"
                              echo "    make all"
echo
