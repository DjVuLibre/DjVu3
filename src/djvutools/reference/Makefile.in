#C-
#C-  Copyright © 1999-2001, LizardTech, Inc. All Rights Reserved.
#C-              Unauthorized use prohibited.
#C-
#
# $Id: Makefile.in,v 1.18 2001-09-04 21:21:19 leonb Exp $
# $Name:  $

%%%include <paths>

SHELL=/bin/sh
prefix=@%prefix%@
bindir=@%PROJECT_PREFIX%@/bin
libdir=@%PROJECT_PREFIX%@/lib
incdir=@%PROJECT_PREFIX%@/include
THREADS=@%threads%@
DEFS=@%DEFS%@ @%DEFSTHREADS%@
INCS=$(DJVUAPI_INC) $(LIBDJVUXX_INC) @%INCS%@
LDFLAGS=
LIBS=@%LIBS%@ @%LIBSTHREADS%@ @%LIBJPEG%@ $(LIBDL) @%libmath%@
MAKESTLIB=@%make_stlib%@
LIBJPEG=@%LIBJPEG%@

CXX=@%CXX%@
CXXOPT=@%CXXOPT%@ @%CXXUNROLL%@
CXXWARN=@%CXXWARN%@
CXXPIC=@%CXXPIC%@
CXXTHREADS=@%CXXTHREADS%@
CXXRPO=@%CXXRPO%@
CXXFLAGS=@%CXXFLAGS%@ $(CXXTHREADS) $(CXXRPO) $(CXXOPT) $(CXXWARN) $(CXXPIC) $(DEFS) $(INCS)

%%%include <commands>

LIB= $(LIBDJVUXX)

PROG= $(BINPATH)/djvudump $(BINPATH)/c44 $(BINPATH)/d44 $(BINPATH)/ddjvu\
	$(BINPATH)/djvumake $(BINPATH)/djvuextract $(BINPATH)/ppmcoco\
	$(BINPATH)/bzz $(BINPATH)/djthumb $(BINPATH)/djvmcvt\
	$(BINPATH)/djvutxt $(BINPATH)/djvuanno $(BINPATH)/cjb2\
	$(BINPATH)/cpaldjvu $(BINPATH)/csepdjvu $(BINPATH)/cdjvu\
	$(BINPATH)/djvm $(BINPATH)/djvused\
	$(BINPATH)/djvuxmlparser $(BINPATH)/djvu2xml\
	$(BINPATH)/native2utf8 $(BINPATH)/xml2native $(BINPATH)/xml2utf8\
	$(BINPATH)/xml2utf16

# Makefile for libdjvu++.a

# Make all

all: lib prog

lib: 

prog: $(PROG)

# Rules for building support programs

DJVMOBJS = djvm.o
DJVUSEDOBJS = djvused.o
DJVUXMLPARSEROBJS = djvuxmlparser.o
DJVUTOXMLOBJS = djvutoxml.o
DJVMCVTOBJS = djvmcvt.o
C44OBJS = c44.o
D44OBJS = d44.o
DJVUDUMPOBJS = djvudump.o
DDJVUOBJS = ddjvu.o
MAKEDEJAVUOBJS = djvumake.o
BREAKDEJAVUOBJS = djvuextract.o
PPMCOCOOBJS = ppmcoco.o
NATIVE2UTF8OBJS = native2utf8.o
XML2NATIVEOBJS = xml2native.o
XML2UTF8OBJS = xml2utf8.o
XML2UTF16OBJS = xml2utf16.o
BZZOBJS = bzz.o
DJTHUMBOBJS = djthumb.o
DJVUTXTOBJS = djvutxt.o
DJVUANNOOBJS = annotate.o
CJB2OBJS = cjb2.o
CPALDJVUOBJS = cpaldjvu.o
CSEPDJVUOBJS = csepdjvu.o
CDJVUSCRIPT = SRCDIR/cdjvu


$(BINPATH)/djvmcvt: $(DJVMCVTOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVMCVTOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVMCVTOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvm: $(DJVMOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVMOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVMOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvused: $(DJVUSEDOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUSEDOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUSEDOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvuxmlparser: $(DJVUXMLPARSEROBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUXMLPARSEROBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUXMLPARSEROBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvu2xml: $(DJVUTOXMLOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUTOXMLOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUTOXMLOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/c44: $(C44OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(C44OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(C44OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/d44: $(D44OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(D44OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(D44OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvudump: $(DJVUDUMPOBJS) $(LIB) 
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUDUMPOBJS) $(LIB)  ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUDUMPOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/ddjvu: $(DDJVUOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DDJVUOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DDJVUOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvumake: $(MAKEDEJAVUOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(MAKEDEJAVUOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(MAKEDEJAVUOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvuextract: $(BREAKDEJAVUOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(BREAKDEJAVUOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(BREAKDEJAVUOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/ppmcoco: $(PPMCOCOOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(PPMCOCOOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(PPMCOCOOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/native2utf8: $(NATIVE2UTF8OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(NATIVE2UTF8OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(NATIVE2UTF8OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/xml2native: $(XML2NATIVEOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(XML2NATIVEOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(XML2NATIVEOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/xml2utf8: $(XML2UTF8OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(XML2UTF8OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(XML2UTF8OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/xml2utf16: $(XML2UTF16OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(XML2UTF16OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(XML2UTF16OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/cjb2: $(CJB2OBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(CJB2OBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(CJB2OBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/cpaldjvu: $(CPALDJVUOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(CPALDJVUOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(CPALDJVUOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/csepdjvu: $(CSEPDJVUOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(CSEPDJVUOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(CSEPDJVUOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/bzz: $(BZZOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(BZZOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(BZZOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djthumb: $(DJTHUMBOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJTHUMBOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJTHUMBOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvutxt: $(DJVUTXTOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUTXTOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUTXTOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/djvuanno: $(DJVUANNOOBJS) $(LIB)
	if [ -n "$(RPO)" ] ; then $(RPO) $(DJVUANNOOBJS) $(LIB) ; fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) -o $@  $(DJVUANNOOBJS) $(LIB) $(LIBS) $(LIBICONV_LINK)

$(BINPATH)/cdjvu: $(CDJVUSCRIPT)
	cp $(CDJVUSCRIPT) $@
	chmod 755 $@

# Documentation

html:

tex:

update-html:

# Cleaning

clean:
	-$(RM) 2>>/dev/null -rf $(PROG) ; true
	-$(RM) 2>>/dev/null $(LIB) *.o *.a *.out *.rpo *.dep ii_files ; true
	if [ -d Test ] ; then $(MAKE) -C Test clean ; fi

realclean: clean
	-$(RM) 2>>/dev/null -rf html tex libdjvu++.ps.gz ; true
	-$(RM) 2>>/dev/null -rf Makefile.depend++ ; true


# Dependencies

%%%include <depend>

# Misc

.PHONY: all lib prog \
       install install-lib install-prog \
       clean realclean html tex depend update-depend \
       release capsule

# Handle cpp files as C++

%%%include <compile>

%%%include "Makefile.depend++"

