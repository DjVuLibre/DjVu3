#C-
#C- DjVu® Unix Viewer (v. 3.5)
#C- 
#C- Copyright © 1999-2001 LizardTech, Inc. All Rights Reserved.
#C- The DjVu Reference Library is protected by U.S. Pat. No.
#C- 6,058,214 and patents pending.
#C- 
#C- This software is subject to, and may be distributed under, the
#C- GNU General Public License, Version 2. The license should have
#C- accompanied the software or you may obtain a copy of the license
#C- from the Free Software Foundation at http://www.fsf.org .
#C- 
#C- The computer code originally released by LizardTech under this
#C- license and unmodified by other parties is deemed the "LizardTech
#C- Original Code."
#C- 
#C- With respect to the LizardTech Original Code ONLY, and subject
#C- to any third party intellectual property claims, LizardTech
#C- grants recipient a worldwide, royalty-free, non-exclusive license
#C- under patent claims now or hereafter owned or controlled by
#C- LizardTech that are infringed by making, using, or selling
#C- LizardTech Original Code, but solely to the extent that any such
#C- patent(s) is/are reasonably necessary to enable you to make, have
#C- made, practice, sell, or otherwise dispose of LizardTech Original
#C- Code (or portions thereof) and not to any greater extent that may
#C- be necessary to utilize further modifications or combinations.
#C- 
#C- The LizardTech Original Code is provided "AS IS" WITHOUT WARRANTY
#C- OF ANY KIND, EITHER EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED
#C- TO ANY WARRANTY OF NON-INFRINGEMENT, OR ANY IMPLIED WARRANTY OF
#C- MERCHANTIBILITY OR FITNESS FOR A PARTICULAR PURPOSE.
#C-
#
# $Id: Makefile.in,v 1.4 2001-10-16 18:01:44 docbill Exp $
# $Name:  $

%%%include <paths>

default: all
.SILENT:;

%%%include <commands>
SHELL	:= /bin/sh
ECHO	:= @%ECHO%@
ECHO_TYPE:= @%ECHO_TYPE%@
CC	:= @%CC%@
CXX	:= @%CXX%@
INCLUDE	:= $(DJVUAPI_INC) $(LIBDJVUXX_INC) @%INCS%@ @%DEFS%@ @%DEFSTHREADS%@ 
CXXFLAGS:= @%CXXFLAGS%@ @%CXXTHREADS%@ @%CXXOPT%@ @%CXXUNROLL%@ @%CXXWARN%@\
	   $(DEFS)
LDFLAGS	:= @%LDFLAGS%@
LDOPTS	:= @%LDOPTS%@
LIBS	:= @%libs%@ @%LIBSTHREADS%@ -lstdc++
MAKESTLIB:= @%make_stlib%@
RPO	:= @%RPO%@
VPATH	:= .

DIR_UNIXGUI	:= ./TOPDIR/SRCDIR/src/unixgui

ifeq ($(ECHO_TYPE),PREFIX)
EHEAD	:= -n
ETAIL	:=
else
EHEAD	:=
ETAIL	:= \\c
endif

#############################################################################
### LIB_DJVU
#############################################################################
DIR_LIB_DJVU	:= ./TOPDIR/src/libdjvu++

#############################################################################
### BIN2CPP
#############################################################################
DIR_BIN2CPP	:= $(DIR_UNIXGUI)/bin2cpp
VPATH		:= $(VPATH):$(DIR_BIN2CPP)
SRC_BIN2CPP	:= bin2cpp.cpp
HDR_BIN2CPP	:= $(patsubst %.cpp,%.h,$(SRC_BIN2CPP))
OBJ_BIN2CPP	:= $(patsubst %.cpp,%.o,$(SRC_BIN2CPP))
SRCS		+= $(SRC_BIN2CPP)
OBJS		+= $(OBJ_BIN2CPP)
PROGRAM		:= $(BINPATH)/bin2cpp

INCLUDE		+= $(patsubst %,-I%,$(subst :, ,$(VPATH)))

#############################################################################
### Supporting programs
#############################################################################
ifneq ($(RPO),)
$(RPO):
	$(ECHO) "Building $(RPO)..."
	$(ECHO) "cd $(dir $@); $(MAKE) $(notdir $@)"
	cd $(dir $@); $(MAKE) $(notdir $@)
endif

#############################################################################
### Library
#############################################################################
$(LIBDJVUXX):
	$(ECHO) "Linking $@..."
	if ( cd $(DIR_LIB_DJVU) ) ; then cd $(DIR_LIB_DJVU) ; $(MAKE) lib ; fi

#############################################################################
### Main program
#############################################################################
$(PROGRAM):	$(OBJS) $(LIBDJVUXX) $(MAKEFILE) $(RPO)
	$(ECHO) "Linking $@...";\
	if [ -n "$(RPO)" ];\
	then\
	   $(ECHO) "Applying RPO to the object files...";\
	   $(RPO) -j3 -v $(OBJS) $(LIBDJVUXX);\
	fi
	$(CXX) $(CXXFLAGS) $(LDFLAGS) $(LDOPTS) -o $(PROGRAM) $(OBJS) $(LIBDJVUXX) $(LIBS)

#############################################################################
### Dependencies generator
#############################################################################
-include $(patsubst %.c,%.dep,$(filter %.c,$(SRCS)))\
	 $(patsubst %.cpp,%.dep,$(filter %.cpp,$(SRCS)))

%.dep: %.cpp
	$(ECHO) "Generating dependencies for $(notdir $<)...";\
	$(CXX) -MM $(CXXFLAGS) $(INCLUDE) $< > /tmp/$$$$.dep || exit 1;\
	$(RM) -f $@; ($(ECHO) $(EHEAD) "$@ " $(ETAIL); cat /tmp/$$$$.dep) > $@;\
	$(RM) -f /tmp/$$$$.dep

#############################################################################
### Basic rules
#############################################################################
all: $(PROGRAM)

clean:
	-$(RM) -f $(PROGRAM) 2>>/dev/null
	-$(RM) -f *.o *.a *.out *.rpo ii_files 2>>/dev/null

distclean: clean
	-$(RM) -f $(MAKEFILE) *.dep 2>>/dev/null

.PHONY: all depend clean distclean

#############################################################################
### Implicit rules and suffixes
#############################################################################
.SUFFIXES: .cpp .dep
.cpp.o:
	$(ECHO) "Compiling $(notdir $<)...";\
        $(CXX) $(CXXFLAGS) $(INCLUDE) -c $< -o $@
