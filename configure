#!/bin/sh


### ---------------------------
### Determine directories

conf=`basename $0`
topsrcdir=`dirname $0`
topbuilddir=.
if [ ! -r $topsrcdir/config/configure.sh ]
then
    echo 1>&2 "$conf: Cannot recognize source directory"
    echo 1>&2 "--  Check that your source directory is complete."
    exit 1
fi


### ---------------------------
### Get functions

. $topsrcdir/config/configure.sh


### ---------------------------
### Process arguments

for arg 
do
  case $arg in 
    --with-threads=* )
      threads=`echo $arg | sed 's/[-A-Za-z_]*=//'` 
      ;; 
    --with-rpo|--frepo )
      rpo=yes
      ;;
    *)
      if process_general_option $arg
      then true  
      else
        test $arg = --help || echo 1>&2 "$conf: Unrecognized option '$arg'"
        echo 1>&2 "Usage: $conf <options>"
        echo 1>&2 "Recognized options:"
        list_general_options
        echo 1>&2 "  --with-threads=(no|co|posix|dce)          choose a thread implementation."
        echo 1>&2 "  --with-rpo,--frepo                        use --frepo option in G++."
        exit 1 
      fi
      ;;
   esac
done


### ---------------------------
### Want a distinct compilation directory

if [ $topsrcdir = $topbuilddir ]
then
    echo 1>&2 "$conf: Cannot compile in the source directory"
    echo 1>&2 "--  You must mkdir a compilation directory and"
    echo 1>&2 "    call $conf from there."
    exit 1
fi


### ---------------------------
### Proceed

check_compiler
check_debug_option $debug
check_thread_option $threads
check_library log -lm
check_rpo_option $rpo
check_make_stlib


### ---------------------------
### Build makefiles

generate_makefile src/libdjvu++
generate_makefile src/libdjvu++/Test

generate_main_makefile src/libdjvu++


### ------------------------------------------------------------------------
### Success


# --- save command line

echo '#!/bin/sh' > reconfigure
echo "$0 $*" >> reconfigure
chmod 755 reconfigure

# --- display cool message

echo
echo Configuration is complete.
echo You can proceed with the compilation by typing:
                              echo "    make clean"
test -n "$compiler_is_gcc" && echo "    make depend"
                              echo "    make all"
echo





